@using System.Diagnostics
@using AutomatedQuestionPaper.Models
@model IEnumerable<AutomatedQuestionPaper.Models.Course>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_adminLoginNavigation.cshtml";
}

@if (TempData["DepartmentNotSelectedErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["DepartmentNotSelectedErrorMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["SubjectedEditedSuccessfully"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SubjectedEditedSuccessfully"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["SubjectedEditedFailure"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["SubjectedEditedFailure"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["SubjectedDeletedSuccessfully"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SubjectedDeletedSuccessfully"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["SubjectedFailedSuccessfully"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["SubjectedFailedSuccessfully"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<br/>

@using (Html.BeginForm("GetSubjects", "Course", FormMethod.Post))
{
    <div class="col-md-10">
        <div class="form-group">
            <label class="col-form-label">Select department</label>
        </div>

        <div class="form-group col-md-12">
            <select name="departmentList" class="form-control" id="departmentList" required>
                <option>--------------------</option>
                @foreach (var department in ViewBag.DepartmentList)
                {
                    <option value="@department.DepartmentName">@department.DepartmentName</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group col-md-4">
        <input type="submit" class="btn btn-primary" value="Get subjects"/>
    </div>

    @Html.ActionLink("Add subject", "Create", "", new {@class = "btn btn-success"})
    @Html.ActionLink("Edit/Delete subject", "Edit", "", new {@class = "btn btn-danger"})
}

@{

    if (TempData["CoursesList"] != null)
    {
        var grid = new WebGrid();
        try
        {
            if (Model != null)
            {
                grid.Bind(Model);
            }
            else
            {
                var db = new DatabaseContext();

                var data = (dynamic) TempData["CoursesList"];

                grid.Bind(data);
            }

            @grid.GetHtml("table table-bordered table-striped ",
                mode: WebGridPagerModes.All,
                firstText: "<< First",
                previousText: "< Prev",
                nextText: "Next >",
                lastText: "Last >>",
                columns: grid.Columns(
                    
                    grid.Column("CourseCode", "Subject code"),
                    grid.Column("CourseName", "Name"),
                    grid.Column("Description", "Description"),
                    grid.Column("Year", "Year"),
                    grid.Column(format: @<text>@Html.ActionLink("Edit", "Edit", new {  }, new { @class = "btn btn-outline-warning" })</text>),
                    grid.Column(format: @<text>@Html.ActionLink("Delete", "Delete", new { }, new { @class = "btn  btn-outline-danger", onclick = "return confirm('Are you sure you wish to delete this staff?');" })</text>)
                    ))
        }
        catch (Exception e)
        {
            Debug.Write(e.Message);
        }
    }
}

@Scripts.Render("~/bundles/jquery")
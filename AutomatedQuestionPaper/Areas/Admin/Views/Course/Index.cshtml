@using System.Diagnostics
@using AutomatedQuestionPaper.Models
@model IEnumerable<AutomatedQuestionPaper.Models.Course>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_adminLoginNavigation.cshtml";
}

@if (TempData["DepartmentNotSelectedErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["DepartmentNotSelectedErrorMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["SubjectedEditedSuccessfully"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SubjectedEditedSuccessfully"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["SubjectedEditedFailure"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["SubjectedEditedFailure"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["SubjectedDeletedSuccessfully"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SubjectedDeletedSuccessfully"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["SubjectedFailedSuccessfully"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["SubjectedFailedSuccessfully"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<br />
@Html.ActionLink("Add subject", "Create", "", new { @class = "btn btn-success float-right" })

<br />
<br />
<br />

@using (Html.BeginForm("GetSubjects", "Course", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <label class="col-form-label">Select department</label>
            </div>
        </div>

        <div class="col-md-6 col-sm-12">
            <div class="form-group">
                <select name="departmentList" class="form-control" id="departmentList" data-val="true" data-val-required="Select department" required="required">
                    @foreach (var department in ViewBag.DepartmentList)
                    {
                        <option value="@department.DepartmentName">@department.DepartmentName</option>
                    }
                </select>
                <span class="field-validation-valid text-danger" data-valmsg-for="departmentList" data-valmsg-replace="true"></span>
            </div>
        </div>
        <div class="col-md-4 col-sm-12">
            <div class="form-group">
                <input type="submit" class="btn btn-primary btn-block" value="Get subjects" />
            </div>
        </div>
    </div>

}

@{

    if (TempData["CoursesList"] != null)
    {
        var grid = new WebGrid();
        try
        {
            if (Model != null)
            {
                grid.Bind(Model);
            }
            else
            {
                var db = new DatabaseContext();

                var data = (dynamic)TempData["CoursesList"];

                grid.Bind(data);
            }

            @grid.GetHtml("table table-bordered table-striped ",
                mode: WebGridPagerModes.All,
                firstText: "<< First",
                previousText: "< Prev",
                nextText: "Next >",
                lastText: "Last >>",
                columns: grid.Columns(

                    grid.Column("CourseCode", "Subject code"),
                    grid.Column("CourseName", "Name"),
                    grid.Column("Description", "Description"),
                    grid.Column("Year", "Year"),
                    grid.Column(format: @<text>@Html.ActionLink("Edit", "Edit", new { }, new { @class = "btn btn-outline-warning" })</text>),
grid.Column(format: @<text>@Html.ActionLink("Delete", "Delete", new { }, new { @class = "btn  btn-outline-danger", onclick = "return confirm('Are you sure you wish to delete this staff?');" })</text>)
))
        }
        catch (Exception e)
        {
            Debug.Write(e.Message);
        }
    }
}

@Scripts.Render("~/bundles/jquery")